#include <iostream>
#include <iomanip>
#include <utility>
#include <cmath>
#include <random>
#include <vector>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <algorithm>
using namespace std;

#define rep(i,n) for(int i = 0; i<n; ++i)
#define REP(i,n) for(int i = 1; i<=n; ++i)
#define all(x) begin(x),end(x)
#define show(obj) for(auto x:obj)cout<<x<<' ';cout<<endl;
typedef long long ll;
typedef pair<int,int> P;
typedef pair<ll,ll> lp;
typedef pair<double, double> FP;
const int inf = 1001001000;
const ll INF = 1LL<<60;
const int MOD = (int)1e9 + 7;

int sign(int a, int b){return (a <= b ? 1 : -1);}

int solve(){
    int n;
    cin >> n;
    vector<P> v(n+1);
    rep(i, n)cin >> v[i].first >> v[i].second;
    int ans = 0;
    int goaltime = 0, goalpos = 0, sttime = 0, stpos = 0;
    vector<int> timeline;
    rep(i, n){
        if(v[i].first >= goaltime){
            ++ans;
            stpos = goalpos;
            sttime = v[i].first;
            goalpos = v[i].second;
            goaltime += abs(stpos - goalpos);
        }
    }
    rep(i, n){
        if(v[i].first >= goaltime){
            ++ans;
            stpos = goalpos;
            sttime = v[i].first;
            goalpos = v[i].second;
            goaltime += abs(stpos - goalpos);
        }else{
            int tpos = stpos + (v[i].first - sttime) * sign(stpos, goalpos);
            if(i == n-1){
                if(sign(stpos, goalpos) < 0){
                    if(goalpos <= tpos)++ans;
                }else{
                    if(goalpos >= tpos)++ans;
                }
                continue;
            }
            int t1pos = stpos + (v[i+1].first - sttime) * sign(stpos, goalpos);
            if(v[i+1].first >= goaltime){
                t1pos = goalpos + (v[i+1].first - goaltime) * sign(goalpos, v[i+1].second);
            }
            int x = v[i].second;
            if((tpos <= x && x <= t1pos) || (tpos >= x && x >= t1pos))++ans;
        }
    }
    return ans;
}

int main(){
    int t;
    cin >> t;
    while(t-- > 0){
        cout << solve() << endl;
    }
    return 0;
}
